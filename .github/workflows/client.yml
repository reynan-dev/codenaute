# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Client CI

on:
  pull_request:
    paths:
      - '.github/workflows/client.yml'
      - 'client/**'
    types: [ready_for_review, opened, reopened]

env:
  SERVICE_NAME: 'client'
  NODEJS_VERSION: '16.17.1'
  PNPM_VERSION: '7.16.0'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/codenaute:client

  workflow:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    container:
      image: 'reynandev/codenaute:client'
      env:
        NODE_ENV: test
      ports:
        - 3000:3000
      volumes:
        - ${{ github.workspace }}:/app

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - name: Install dependencies globaly
        run: pnpm install --fix-lockfile

      - name: Install dependencies on client
        run: pnpm install --fix-lockfile
        working-directory: ./${{ env.SERVICE_NAME }}

      - name: Restore Github Cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-platform-client-${{ hashFiles('pnpm-lock.yaml', 'client/pnpm-lock.yaml') }}

      - name: Run Tests
        run: pnpm test
        working-directory: ./${{ env.SERVICE_NAME }}

      - name: Run Prettier Formatting
        run: npx prettier --write .
        working-directory: ./${{ env.SERVICE_NAME }}
