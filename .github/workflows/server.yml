# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Server CI

on:
  pull_request:
    path:
      - '.github/workflows/server.yml'
      - 'server/**'

env:
  SERVICE_NAME: 'server'
  NODEJS_VERSION: '16.17.1'
  PNPM_VERSION: '7.16.0'
  DOCKER_IMAGE: 'reynandev/codenaute:server'
  DOCKER_DATABASE: 'postgres:14.6-alpine'

jobs:
  workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - name: Start Node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}

      - name: Start pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Dependencies
        run: make install

      - name: Restore Github Cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-platform-server-${{ hashFiles('pnpm-lock.yaml', '**/pnpm-lock.yaml') }}

      - name: Run Prettier
        working-directory: ./${{env.SERVICE_NAME}}
        run: make prettier

  database:
    needs: workflow
    environment: tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ${{ env.DOCKER_DATABASE }}
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Wait for Postgres to be ready
        run: dockerize -wait tcp://localhost:5432 -timeout 1m

  application-and-tests:
    needs: [workflow, docker-database]
    runs-on: ubuntu-latest
    container:
      image: ${{ env.DOCKER_IMAGE }}
      env:
        NODE_ENV: test
      ports:
        - 5000:5000
      volumes:
        - ${{ github.workspace }}:/app

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - name: Make Install
        run: make install

      - name: Run Tests
        run: make test
        working-directory: ./${{env.SERVICE_NAME}}
