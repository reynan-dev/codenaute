version: '3.8'

services:
  database-dev:
    container_name: database-dev-codenaute
    image: postgres:14.6-alpine
    restart: always
    env_file:
      - ./database/.env.database.dev
    expose:
      - 5432
    volumes:
      - database-dev:/var/lib/postgresql/data

  database-test:
    container_name: database-test-codenaute
    image: postgres:14.6-alpine
    restart: always
    env_file:
      - ./database/.env.database.test
    expose:
      - 2345
    volumes:
      - database-test:/var/lib/postgresql/data
    command: -p 2345

  adminer:
    container_name: adminer-dev--codenaute
    image: adminer
    ports:
      - 8080:8080
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=postgres

  server:
    container_name: server-dev-codenaute
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${NODE_ENV}
    env_file:
      - ./server/.env.server
    environment:
      - NODE_ENV=${NODE_ENV}
    restart: always
    ports:
      - 5000:5000
    depends_on:
      - database-dev
      - adminer
    volumes:
      - ./server:/app
      - /app/node_modules

  client:
    container_name: client-dev-codenaute
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${NODE_ENV}
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./client:/app
      - /app/node_modules

networks:
  default:
    driver: bridge

volumes:
  database-dev:
  database-test:
