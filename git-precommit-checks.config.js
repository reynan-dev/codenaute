module.exports = {
    display: {
        // Utilise les notifs syst√®me pour nous signler qu‚Äôun
        // probl√®me est d√©tect√©.
        notifications: true,
        // Affiche les chemins des fichiers et num√©ros de lignes
        // ainsi que les contenus d√©faillants. Pratique pour ouvrir
        // via un "Ctrl + clic" le fichier au bon emplacement
        // directement dans l'√©diteur.
        offendingContent: true,
        // Si jamais on souhaite obtenir l‚Äôaffiche dans le
        // terminal du d√©tail des r√®gles en place.
        rulesSummary: false,
        // Si on veut afficher des statistiques simplifi√©es
        // (exemple : "1 error, 1 warning").
        shortStats: true,
        // Pour afficher le d√©tail de chaque action execut√©e,
        // les fichiers analys√©s, le r√©sum√© des op√©rations.
        verbose: false,
    },
    rules: [
        // R√®gles globales, appliqu√©es sur tous les contenus ajout√©s
        {
            // On renseigne le message qui doit nous √™tre affich√© en cas de probl√®me.
            message: 'Aurais-tu oubli√© de terminer certaines t√¢ches ?',
            // Ici on indique qu‚Äôon veut juste une alerte, sans stopper le commit.
            // Par d√©faut c‚Äôest renseign√© √† "false".
            nonBlocking: true,
            // On passe sous forme de texte ou d‚Äôexpression rationnelle
            // les contenus √† rechercher.
            regex: /(?:FIXME|TODO)/,
            filter: ["^package\\.json$", "^git-precommit-checks\\.config\\.js$"],
        },
        {
            message: 'Tu as des marqueurs de conflits qui tra√Ænent',
            regex: /^[<>|=]{4,}/m,
        },
        {
            message:
                'Arr√™t du commit : tu as renseign√© des choses qui ne doivent pas √™tre commit√©es !',
            regex: /do not commit/i,
            filter: ["^package\\.json$", "^git-precommit-checks\\.config\\.js$"],
        },
        // Ensuite on peut sp√©cifier des fichiers ou motifs particuliers
        // pour appliquer nos r√®gles, √ßa se fait avec la propri√©t√© "filter".
        {
            // L√† encore on peut utiliser une expression rationnelle
            filter: /\.js$/,
            message: 'ü§î Hum ! N‚Äôas-tu pas oubli√© de retirer du "console.log(‚Ä¶)" ?',
            nonBlocking: true,
            regex: /^\s*console\.log/,
        },
        // Sp√©cifique √† Ruby/Rails
        {
            filter: /_spec\.rb$/,
            message: 'Tu as laiss√© tra√Æner un "focus" dans tes tests RSpec',
            regex: /(?:focus: true|:focus => true)/,
        },
        {
            filter: /\.rb$/,
            message:
                '√áa sent l‚Äôoubli apr√®s un debug manuel : regarde ce `binding.pry` qui tra√Æne',
            regex: /^[^#]*\bbinding\.pry/,
        },
    ],
}
